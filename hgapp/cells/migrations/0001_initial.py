# Generated by Django 2.2.12 on 2020-05-27 21:27

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Cell',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='date created')),
                ('world_name', models.CharField(max_length=200)),
                ('world_description', models.TextField(blank=True, max_length=40000, null=True)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='cell_creator', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'permissions': (('admin', 'Administrate'), ('manage_memberships', 'Manage Memberships'), ('manage_roles', 'manage Roles'), ('post_events', 'Post World Events'), ('manage_member_characters', 'Manage Member Characters'), ('edit_world', 'Edit World Description'), ('manage_games', 'Manage Games')),
            },
        ),
        migrations.CreateModel(
            name='WorldEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='date created')),
                ('headline', models.CharField(max_length=200)),
                ('event_description', models.TextField(blank=True, max_length=40000, null=True)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='event_creator', to=settings.AUTH_USER_MODEL)),
                ('parent_cell', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='happened_in_cell', to='cells.Cell')),
            ],
        ),
        migrations.CreateModel(
            name='CellMembership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('LEADER', 'Leader'), ('JUDGE', 'Judge'), ('MEMBER', 'Member'), ('WATCHER', 'Watcher')], max_length=20)),
                ('joined_date', models.DateTimeField(auto_now_add=True, verbose_name='date created')),
                ('member_player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('relevant_cell', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cells.Cell')),
            ],
            options={
                'unique_together': {('relevant_cell', 'member_player')},
            },
        ),
        migrations.AddField(
            model_name='cell',
            name='members',
            field=models.ManyToManyField(through='cells.CellMembership', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='PermissionsSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('LEADER', 'Leader'), ('JUDGE', 'Judge'), ('MEMBER', 'Member'), ('WATCHER', 'Watcher')], max_length=20)),
                ('can_manage_memberships', models.BooleanField()),
                ('can_manage_roles', models.BooleanField()),
                ('can_post_events', models.BooleanField()),
                ('can_manage_member_characters', models.BooleanField()),
                ('can_edit_world', models.BooleanField()),
                ('can_manage_games', models.BooleanField()),
                ('relevant_cell', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cells.Cell')),
            ],
            options={
                'unique_together': {('relevant_cell', 'role')},
            },
        ),
    ]
