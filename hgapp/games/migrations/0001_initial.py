# -*- coding: utf-8 -*-
# Generated by Django 1.10.3 on 2017-08-25 15:29
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('characters', '0004_auto_20170825_1625'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Cycle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=130)),
                ('summary', models.TextField(max_length=5000)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('required_character_status', models.CharField(choices=[('ANY', 'Any'), ('NOVICE', 'Novice'), ('SEASONED', 'Seasoned'), ('VETERAN', 'Veteran')], default=('ANY', 'Any'), max_length=25)),
                ('title', models.CharField(max_length=130)),
                ('hook', models.TextField(blank=True, max_length=500, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='date created')),
                ('scheduled_start_time', models.DateTimeField(blank=True, null=True, verbose_name='scheduled start time')),
                ('actual_start_time', models.DateTimeField(blank=True, null=True, verbose_name='actual start time')),
                ('end_time', models.DateTimeField(blank=True, null=True, verbose_name='end time')),
                ('status', models.CharField(choices=[('SCHEDULED', 'Scheduled'), ('ACTIVE', 'Active'), ('FINISHED', 'Finished'), ('ARCHIVED', 'Archived'), ('CANCELED', 'Canceled'), ('VOID', 'Void')], default=('SCHEDULED', 'Scheduled'), max_length=25)),
                ('scenario_notes', models.TextField(blank=True, max_length=1000, null=True)),
                ('open_invitations', models.BooleanField(default=True)),
            ],
            options={
                'permissions': (('view_game', 'View game'), ('edit_game', 'Edit game')),
            },
        ),
        migrations.CreateModel(
            name='Game_Attendance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notes', models.TextField(blank=True, max_length=500, null=True)),
                ('outcome', models.CharField(blank=True, choices=[('WIN', 'Win'), ('LOSS', 'Loss'), ('DEATH', 'Death'), ('DECLINED', 'Declined Harbinger Invite'), ('RINGER_VICTORY', 'Ringer Victory'), ('RINGER_FAILURE', 'Ringer Failure')], max_length=10, null=True)),
                ('attending_character', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='characters.Character')),
                ('relevant_game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='games.Game')),
            ],
        ),
        migrations.CreateModel(
            name='Game_Invite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_declined', models.BooleanField(default=False)),
                ('invite_text', models.TextField(blank=True, max_length=1000, null=True)),
                ('as_ringer', models.BooleanField(default=False)),
                ('attendance', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='games.Game_Attendance')),
                ('invited_player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('relevant_game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='games.Game')),
            ],
        ),
        migrations.CreateModel(
            name='Scenario',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=130)),
                ('summary', models.TextField(max_length=5000)),
                ('description', models.TextField(max_length=40000)),
                ('suggested_status', models.CharField(choices=[('ANY', 'Any'), ('NOVICE', 'Novice'), ('SEASONED', 'Seasoned'), ('VETERAN', 'Veteran')], default=('ANY', 'Any'), max_length=25)),
                ('max_players', models.IntegerField(verbose_name='Suggested Maximum number of players')),
                ('min_players', models.IntegerField(verbose_name='Suggested Minimum number of players')),
                ('order_in_cycle', models.IntegerField(blank=True, null=True)),
                ('is_highlander', models.BooleanField(default=False)),
                ('requires_ringer', models.BooleanField(default=False)),
                ('is_rivalry', models.BooleanField(default=False)),
            ],
            options={
                'permissions': (('view_scenario', 'View scenario'), ('edit_scenario', 'Edit scenario')),
            },
        ),
        migrations.CreateModel(
            name='Scenario_Discovery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.CharField(choices=[('PLAYED', 'Played'), ('CREATED', 'Created'), ('SHARED', 'Shared')], max_length=25)),
                ('discovering_player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('relevant_scenario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='games.Scenario')),
            ],
        ),
        migrations.AddField(
            model_name='scenario',
            name='available_to',
            field=models.ManyToManyField(blank=True, default=None, through='games.Scenario_Discovery', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='scenario',
            name='creator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scenario_creator', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='scenario',
            name='cycle',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='games.Cycle'),
        ),
        migrations.AddField(
            model_name='game',
            name='attended_by',
            field=models.ManyToManyField(through='games.Game_Attendance', to='characters.Character'),
        ),
        migrations.AddField(
            model_name='game',
            name='creator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='game_creator', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='game',
            name='invitations',
            field=models.ManyToManyField(through='games.Game_Invite', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='game',
            name='scenario',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='games.Scenario'),
        ),
        migrations.AlterUniqueTogether(
            name='scenario_discovery',
            unique_together=set([('discovering_player', 'relevant_scenario')]),
        ),
        migrations.AlterUniqueTogether(
            name='game_invite',
            unique_together=set([('invited_player', 'relevant_game')]),
        ),
        migrations.AlterUniqueTogether(
            name='game_attendance',
            unique_together=set([('attending_character', 'relevant_game')]),
        ),
    ]
